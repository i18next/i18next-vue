import{_ as n,J as a,o as r,c as l,k as e,a as i,N as s,V as t}from"./chunks/framework.c7a2cdcb.js";const V=JSON.parse('{"title":"Migration from i18next-vue v2.x","description":"","frontmatter":{},"headers":[],"relativePath":"migration-v3.md","filePath":"migration-v3.md","lastUpdated":1690126106000}'),c={name:"migration-v3.md"},u=e("h1",{id:"migration-from-i18next-vue-v2-x",tabindex:"-1"},[i("Migration from "),e("code",null,"i18next-vue"),i(" v2.x "),e("a",{class:"header-anchor",href:"#migration-from-i18next-vue-v2-x","aria-label":'Permalink to "Migration from `i18next-vue` v2.x"'},"​")],-1),d=e("p",null,"Version 3 has some breaking changes coming from v2.x",-1),p=e("h2",{id:"breaking-changes",tabindex:"-1"},[i("Breaking changes "),e("a",{class:"header-anchor",href:"#breaking-changes","aria-label":'Permalink to "Breaking changes"'},"​")],-1),_=t('<li>requires <code>i18next</code> &gt;=23 <ul><li>Consult the <a href="https://www.i18next.com/misc/migration-guide" target="_blank" rel="noreferrer"><code>i18next</code> Migration Guide</a> for updating.</li></ul></li><li>the 3.x package is ESM-only <ul><li>Relevant only for <a href="https://gist.github.com/sindresorhus/a39789f98801d908bbc7ff3ecc99d99c" target="_blank" rel="noreferrer">CommonJS users</a>, i. e. when using <code>require()</code> imports</li></ul></li>',2),h=e("a",{href:"/i18next-vue/guide/i18n-options.html"},[e("code",null,"i18nOptions")],-1),m=t('<ul><li>You can use <code>useTranslation()</code> with its <a href="/i18next-vue/guide/composition-api.html#customize-t">new parameters for most of these use-cases</a>.</li><li>Legacy support for <code>i18nOptions</code> needs to be enabled explicitly via the <a href="/i18next-vue/guide/started.html#plugin-options"><code>legacyI18nOptionsSupport: true</code> plugin option</a></li><li>This allows component-by-component migration to <code>useTranslation()</code> using the 3.x version. Support for <code>i18nOptions</code> will be removed in 4.0.</li></ul>',1),g=e("li",null,[i("removed support for "),e("code",null,"<i18n>"),i(" blocks in SFCs and "),e("code",null,"messages"),i(" in "),e("code",null,"i18nOptions"),e("ul",null,[e("li",null,"i.e. no more per-component translations"),e("li",null,"There is no replacement for this, as this seems to be a rarely used feature.")])],-1),f=t('<h2 id="new-changed-functionality" tabindex="-1">New/changed functionality <a class="header-anchor" href="#new-changed-functionality" aria-label="Permalink to &quot;New/changed functionality&quot;">​</a></h2><ul><li>new <code>useTranslation()</code> parameters to <a href="/i18next-vue/guide/composition-api.html#customize-t">specify a fixed language, namespace(s) and a keyprefix</a> (all optional)</li><li><code>$t</code>/<code>t</code> functions will return an empty string while i18next is loading <ul><li>v2 returned the untranslated translation key, which is usually uglier</li></ul></li><li>support for <a href="https://www.i18next.com/overview/typescript" target="_blank" rel="noreferrer">TypeScript auto-completion of translation keys</a><ul><li>via <code>i18next</code>&#39;s support for this</li><li>Your milage may vary (dev performance, ...). If it works for you, it can be quite useful.</li></ul></li></ul>',2);function x(v,T,y,b,w,k){const o=a("Badge");return r(),l("div",null,[u,d,p,e("ul",null,[_,e("li",null,[i("deprecated support for "),h,i(" (Options API) "),s(o,{type:"warning",text:"for removal in 4.0"}),m]),g]),f])}const P=n(c,[["render",x]]);export{V as __pageData,P as default};
