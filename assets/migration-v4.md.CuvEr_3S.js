import{_ as e,c as t,o,a4 as a}from"./chunks/framework.CJMu5Qco.js";const m=JSON.parse('{"title":"Migration to i18next-vue v4.x","description":"","frontmatter":{},"headers":[],"relativePath":"migration-v4.md","filePath":"migration-v4.md","lastUpdated":1724354815000}'),i={name:"migration-v4.md"},n=a('<h1 id="migration-to-i18next-vue-v4-x" tabindex="-1">Migration to <code>i18next-vue</code> v4.x <a class="header-anchor" href="#migration-to-i18next-vue-v4-x" aria-label="Permalink to &quot;Migration to `i18next-vue` v4.x&quot;">​</a></h1><p>There are few breaking changes migrating from <code>i18next-vue</code> version 3 to version 4.</p><p>If you are migrating from older versions, see <a href="/i18next-vue/migration-v3.html">Migration to <code>i18next-vue</code> v3.x</a> first.</p><p>If you are still using the <a href="/i18next-vue/guide/i18n-options.html"><code>i18nOptions</code></a> component options, it makes sense to upgrade to version 3 first. Then iteratively migrate all its uses to <code>useTranslation()</code> with its <a href="/i18next-vue/guide/composition-api.html#customize-t">new parameters</a>. Then you can easily upgrade to 4.x.</p><h2 id="breaking-changes" tabindex="-1">Breaking changes <a class="header-anchor" href="#breaking-changes" aria-label="Permalink to &quot;Breaking changes&quot;">​</a></h2><ul><li>removed support for <a href="/i18next-vue/guide/i18n-options.html"><code>i18nOptions</code></a> (Options API) <ul><li>You can use <code>useTranslation()</code> with its <a href="/i18next-vue/guide/composition-api.html#customize-t">new parameters</a> for most of these use-cases instead.</li><li>Removed the <a href="/i18next-vue/guide/started.html#plugin-options"><code>legacyI18nOptionsSupport: true</code> plugin option</a></li></ul></li></ul><h2 id="new-changed-functionality" tabindex="-1">New/changed functionality <a class="header-anchor" href="#new-changed-functionality" aria-label="Permalink to &quot;New/changed functionality&quot;">​</a></h2><p>No new functionality. This is a cleanup-only release.</p><h1 id="migration-to-i18next-vue-v5-x" tabindex="-1">Migration to <code>i18next-vue</code> v5.x <a class="header-anchor" href="#migration-to-i18next-vue-v5-x" aria-label="Permalink to &quot;Migration to `i18next-vue` v5.x&quot;">​</a></h1><p>(Re-phrasing the <a href="https://github.com/vuejs/router/blob/main/packages/router/CHANGELOG.md#441-2024-07-31" target="_blank" rel="noreferrer">Vue Router changelog</a> for an analogous change):</p><blockquote><p>This release replaces <code>declare module &#39;@vue/runtime-core&#39;</code> with <code>declare module &#39;vue&#39;</code> <a href="https://vuejs.org/guide/typescript/options-api.html#augmenting-global-properties" target="_blank" rel="noreferrer">like it&#39;s supposed to be</a>. If you (or packages you use) are also augmenting <code>@vue/runtime-core</code>, you will likely have to change it to <code>vue</code>. It is also recommended to use an up-to-date TypeScript version (&gt;=5.4) and <code>&quot;moduleResolution&quot;: &quot;Bundler&quot;</code> in your <code>tsconfig.json</code>.</p></blockquote><h2 id="new-changed-functionality-1" tabindex="-1">New/changed functionality <a class="header-anchor" href="#new-changed-functionality-1" aria-label="Permalink to &quot;New/changed functionality&quot;">​</a></h2><p>No other changes/migration necessary.</p>',13),r=[n];function s(c,u,l,d,h,g){return o(),t("div",null,r)}const v=e(i,[["render",s]]);export{m as __pageData,v as default};
